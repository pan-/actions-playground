# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Container definition that will run the test
    container:
        image: ubuntu:latest
        volumes:
            - "/tmp/output_binaries:/tmp/output_binaries"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y lavacli

      - name: Create build files
        run: |
            echo "Hello World" > out.hex

      - name: Copy aside binaries
        run: |
            cp -r out.hex /tmp/output_binaries/
            ls -la /tmp/output_binaries/

      - name: Binary artifact suffix
        id: outsuffix
        uses: haya14busa/action-cond@v1.0.0
        with:
            cond: ${{ github.event.pull_request.number == '' }}
            if_true: "${{ github.sha }}"
            if_false: "pull-${{ github.event.pull_request.number }}"

      - name: Uploading Binaries
        uses: actions/upload-artifact@v2
        with:
            name: unit-test-build-${{steps.outsuffix.outputs.value }}
            path: /tmp/output_binaries/out.hex

      - name: launch lava job
        env:
          LAVA_SERVER_TOKEN: ${{ secrets.LAVA_SERVER_TOKEN }}
          LAVA_SERVER_URL: ${{ secrets.LAVA_SERVER_URL }}
        run: |
          lavacli identities add --uri "$LAVA_SERVER_URL" --username lava-admin --token "$LAVA_SERVER_TOKEN" default
          LAVA_JOB_ID=`lavacli jobs submit $GITHUB_WORKSPACE/lava/job.yml`
          lavacli jobs wait $LAVA_JOB_ID
          lavacli jobs logs $LAVA_JOB_NO > job.log
          cat job.log

